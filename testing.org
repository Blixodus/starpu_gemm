** Guix (fonctionne sans CUDA sous PlaFRIM)
OMPI_MCA_btl=^openib OMPI_MCA_osc=^ucx OMPI_MCA_pml=^ucx guix shell --pure starpu-example-cppgemm chameleon slurm@22 --preserve=^OMPI_MCA --preserve=^SLURM --preserve=^STARPU --with-branch=starpu-example-cppgemm=main --with-branch=starpu=master

Ensuite lancer avec

gemm params
chameleon_stesting params
srun -l gemm params
srun -l chameleon_stesting params

** Modules
module load compiler/cuda/11.6
module load compiler/gcc/11.2.0
module load linalg/openblas/0.3.9
module load hardware/hwloc/2.7.0
module load trace/fxt/0.3.14
module load mpi/openmpi/4.0.3
module load build/cmake/3.21.3
module load linalg/lapacke/3.9.1
module load tools/trace/likwid/4.0.3

** Install New Madeleine (stable commit)
git clone https://gitlab.inria.fr/pm2/pm2.git
cd pm2
git checkout 7e3edd5002885d4a114c5e551106f28ae9630e01
cd scripts
./pm2-build-packages ./madmpi.conf --prefix=$HOME/local

** Install StarPU (stable fork)
git clone https://github.com/Blixodus/starpu
./autogen.sh
mkdir buildq
cd build
# Without nmad (works on Rubik/PlaFRIM)
../configure --prefix=$HOME/local
# With nmad (works only on Rubik)
../configure --prefix=$HOME/local --enable-nmad
make -j
make install -j

** Important to set this environment
source $HOME/local/bin/starpu_env
export OMP_NUM_THREADS=1

** Install chameleon
git clone --recurse-submodules https://gitlab.inria.fr/solverstack/chameleon.git
cd chameleon
cmake -B build -DCHAMELEON_USE_CUDA=ON -DCHAMELEON_USE_MPI=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=$HOME/local
cd build
make -j
make install -j

** Build starpu_gemm
git clone git@github.com:Blixodus/starpu_gemm.git
cd starpu_gemm
cmake -B build -DENABLE_CUDA=ON
cd build
make -j

** MPI Check
mpirun -n 2 --map-by node --tag-output hostname

** Run with MPI
mpirun -n 2 --map-by node --tag-output gemm [exp] [k_min] [k_max] [bs_min] [bs_max]
mpirun -n 2 --map-by node --tag-output chameleon_stesting -H -o gemm -m 20000 -n 20000 -k 2000 -b 2000 -g 2

** Run with nmad
padico-launch -n 2
